=== tests/cases/conformance/declarationEmit/a.ts ===
export class A {
>A : Symbol(A, Decl(a.ts, 0, 0))

  static foo() {}
>foo : Symbol(A.foo, Decl(a.ts, 0, 16))
}

=== tests/cases/conformance/declarationEmit/b.ts ===
import { A } from './a';
>A : Symbol(A, Decl(b.ts, 0, 8))

export class B extends A {}
>B : Symbol(B, Decl(b.ts, 0, 24))
>A : Symbol(A, Decl(b.ts, 0, 8))

=== tests/cases/conformance/declarationEmit/index.ts ===
import { B } from './b';
>B : Symbol(B, Decl(index.ts, 0, 8))

export const foo = B.foo;
>foo : Symbol(foo, Decl(index.ts, 1, 12))
>B.foo : Symbol(A.foo, Decl(a.ts, 0, 16))
>B : Symbol(B, Decl(index.ts, 0, 8))
>foo : Symbol(A.foo, Decl(a.ts, 0, 16))

